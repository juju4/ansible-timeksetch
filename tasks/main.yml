---
## https://github.com/google/timesketch/wiki/Installation

- name: Include version-specific variables for Ubuntu.
  include_vars: "{{ ansible_distribution }}-{{ ansible_distribution_version }}.yml"
  when: ansible_distribution == 'Ubuntu'
#- name: Include OS-specific variables for Fedora.
#  include_vars: "{{ ansible_distribution }}.yml"
#  when: ansible_distribution == 'Fedora'
- name: Include version-specific variables for RedHat
  include_vars: "RedHat-{{ ansible_distribution_version.split('.')[0] }}.yml"
  when: ansible_os_family == "RedHat"

- name: Debian | requirements
  include: debian.yml
  when: ansible_distribution == 'Debian' or ansible_distribution == 'Ubuntu'

- name: Redhat | requirements
  include: redhat.yml
  when: ansible_os_family == "RedHat"

- name: Ensure right python is present
  package:
    name: "{% if timesketch_python_bin == 'python2' %}{{ python2_deps }}{% else %}{{ python_deps }}{% endif %}"
    state: present

## if not provided by gift ppa
- name: plaso pip dependencies
  pip:
    name: ['artifacts', 'bencode']
    state: present
    executable: "{{ timesketch_python_pip }}"
  when: not (ansible_distribution == 'Ubuntu' and ansible_distribution_major_version | int >= 14)
  register: pkg_result
  until: pkg_result is success

- name: Bugfix trusty - force Flask-Login v0.3.2 - https://github.com/google/timesketch/pull/244
  pip:
    name: Flask-login
    version: 0.3.2
    state: present
    executable: "{{ timesketch_python_pip }}"
  when: (ansible_distribution_release == 'trusty' or ansible_distribution_release == 'xenial')
  register: pkg_result
  until: pkg_result is success

- name: check role user exists
  user:
    name: "{{ timesketch_user }}"
    home: "{{ timesketch_root }}"
  become: yes

- name: install timesketch with pip
  pip:
    name: "{{ item.n }}"
    version: "{{ item.v }}"
    state: present
    executable: "{{ timesketch_python_pip }}"
  with_items:
    - { n: timesketch, v: "{{ timesketch_version }}" }
    - { n: timesketch-api-client, v: ">=20191220" }
  register: pkg_result
  until: pkg_result is success

- name: Ensure /etc/timesketch directory exists
  file:
    dest: /etc/timesketch
    state: directory
    mode: '0750'
    owner: "{{ timesketch_user }}"
    group: root


- name: Ensure timesketch var directory exists
  file:
    dest: "{{ timesketch_root }}"
    state: directory
    mode: '0755'
    owner: "{{ timesketch_user }}"
- name: generating random secret
  command: "openssl rand -base64 32"
  register: rand
  changed_when: False
  no_log: "{{ timesketch_no_log | default(true) }}"

- name: set up timesketch config
  template:
    src: timesketch.conf.j2
    dest: "{{ timesketch_conf }}"
    mode: '0600'
  notify:
    - restart supervisor

- include: configure-postgresql.yml

- debug: var=timesketch_userlist
## FIXME! idempotent? overwrite any existing user
- name: add timesketch user
  command: "tsctl add_user --username {{ item.u }} --password {{ item.p }}"
#  args:
#    creates: /var/timesketch/database.db
  with_items: "{{ timesketch_userlist }}"
  become: yes
  become_user: "{{ timesketch_user }}"

#- name: start timesketch
#  command: "tsctl runserver"

- name: set supervisor config to manage timesketch
  template: src=supervisord.ini dest={{ supervisor_confdir }}/{{ supervisor_targetconf }} mode=0644
  notify:
    - restart supervisor

- include: backup-script.yml

## FIXME! ansible bug. not working on xenial
- name: ensure supervisor service is enabled and started
  service: name={{ supervisor_service }} enabled=yes state=started

- include: plaso-uploading.yml
  when: timesketch_uploading is defined and timesketch_uploading

- include: plaso-process.yml
  when: timesketch_process is defined and timesketch_process
